using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Styx_Biblio_Jeu
{
    public class Plateau
    {
        public string[,] tab; // Grille du labyrinthe
        private int[,] pile; // Initialisation de la pile qui contiendra toutes les coordonnées des cases visitées
        int comptPile = 0; // Initialisation du compteur de la pile
        public int compArtefact = 0;
        public int compFlamme = 0;
        int compteurPorte = 0; // Initialisation du compteur de porte
        int comptVisiteur = 0;// Initialisation du compteur du tableau visiteur
        private int[,] tabVisiteurs; // Initialisation du tableau visiteur qui contiendra toutes les coordonnées des cases visités
        public int Hauteur; // Hauteur du labyrinthe
        public int Largeur; // Largeur du labyrinthe
        private Random random = new Random(); // Générateur de nombres aléatoires

        // Constructeur initialisant la grille du labyrinthe avec sa taille
        public Plateau(int height, int width)
        {
            this.Hauteur = height;
            this.Largeur = width;
            tab = new string[400, 400]; // Initialisation de la grille
            pile = new int[400, 2];
            tabVisiteurs = new int[5000, 2];
        }
        public void Generateboss()
        {
            Initializelaby1();
            Initialisationinterlaby();
            creationflammeAleatoire();
            creationdashAleatoire();
            creationlyreAleatoire();
            creationmultAleatoire();
            creationbouclierAleatoire();
            creationcoeurAleatoire();
            creationvitesseAleatoire();
            creationbalanceAleatoire();
            creationfloconAleatoire();
        }

        public void Initialisationinterlaby()
        {
            tab[1, 1] = "mur";
            tab[1, 2] = "|";
            tab[1, 3] = "mur";
            tab[1, 4] = "|";
            tab[1, 5] = "mur";
            tab[1, 6] = "|";
            tab[1, 7] = "esp";
            tab[1, 8] = " ";
            tab[1, 9] = "esp";
            tab[1, 10] = " ";
            tab[1, 11] = "esp";
            tab[1, 12] = "|";
            tab[1, 13] = "mur";
            tab[1, 14] = "|";
            tab[1, 15] = "mur";
            tab[1, 16] = "|";
            tab[1, 17] = "mur";
            tab[1, 18] = "|";
            tab[1, 19] = "mur";
            tab[1, 20] = "|";
            tab[1, 21] = "mur";
            tab[1, 22] = "|";
            tab[1, 23] = "mur";
            tab[1, 24] = "|";
            tab[1, 25] = "mur";
            tab[1, 26] = "|";
            tab[1, 27] = "mur";
            tab[1, 28] = "|";
            tab[1, 29] = "mur";
            tab[1, 30] = "|";
            tab[1, 31] = "esp";
            tab[1, 32] = " ";
            tab[1, 33] = "esp";
            tab[1, 34] = " ";
            tab[1, 35] = "esp";
            tab[1, 36] = "|";
            tab[1, 37] = "mur";
            tab[1, 38] = "|";
            tab[1, 39] = "mur";
            tab[1, 40] = "|";
            tab[1, 41] = "mur";
            


            tab[2, 1] = "---";
            tab[2, 2] = "+";
            tab[2, 3] = "---";
            tab[2, 4] = "+";
            tab[2, 5] = "---";
            tab[2, 6] = "+";
            tab[2, 7] = "   ";
            tab[2, 8] = "+";
            tab[2, 9] = "---";
            tab[2, 10] = "+";
            tab[2, 11] = "   ";
            tab[2, 12] = "+";
            tab[2, 13] = "---";
            tab[2, 14] = "+";
            tab[2, 15] = "---";
            tab[2, 16] = "+";
            tab[2, 17] = "---";
            tab[2, 18] = "+";
            tab[2, 19] = "---";
            tab[2, 20] = "+";
            tab[2, 21] = "---";
            tab[2, 22] = "+";
            tab[2, 23] = "---";
            tab[2, 24] = "+";
            tab[2, 25] = "---";
            tab[2, 26] = "+";
            tab[2, 27] = "---";
            tab[2, 28] = "+";
            tab[2, 29] = "---";
            tab[2, 30] = "+";
            tab[2, 31] = "   ";
            tab[2, 32] = "+";
            tab[2, 33] = "---";
            tab[2, 34] = "+";
            tab[2, 35] = "   ";
            tab[2, 36] = "+";
            tab[2, 37] = "---";
            tab[2, 38] = "+";
            tab[2, 39] = "---";
            tab[2, 40] = "+";
            tab[2, 41] = "---";
            



            tab[3, 1] = "mur";
            tab[3, 2] = "|";
            tab[3, 3] = "esp";
            tab[3, 4] = " ";
            tab[3, 5] = "esp";
            tab[3, 6] = " ";
            tab[3, 7] = "esp";
            tab[3, 8] = "|";
            tab[3, 9] = "mur";
            tab[3, 10] = "|";
            tab[3, 11] = "esp";
            tab[3, 12] = " ";
            tab[3, 13] = "esp";
            tab[3, 14] = " ";
            tab[3, 15] = "esp";
            tab[3, 16] = " ";
            tab[3, 17] = "esp";
            tab[3, 18] = " ";
            tab[3, 19] = "esp";
            tab[3, 20] = " ";
            tab[3, 21] = "esp";
            tab[3, 22] = " ";
            tab[3, 23] = "esp";
            tab[3, 24] = " ";
            tab[3, 25] = "esp";
            tab[3, 26] = " ";
            tab[3, 27] = "esp";
            tab[3, 28] = " ";
            tab[3, 29] = "esp";
            tab[3, 30] = " ";
            tab[3, 31] = "esp";
            tab[3, 32] = "|";
            tab[3, 33] = "mur";
            tab[3, 34] = "|";
            tab[3, 35] = "esp";
            tab[3, 36] = " ";
            tab[3, 37] = "esp";
            tab[3, 38] = " ";
            tab[3, 39] = "esp";
            tab[3, 40] = "|";
            tab[3, 41] = "mur";
            

            tab[4, 1] = "---";
            tab[4, 2] = "+";
            tab[4, 3] = "   ";
            tab[4, 4] = "+";
            tab[4, 5] = "---";
            tab[4, 6] = "+";
            tab[4, 7] = "   ";
            tab[4, 8] = "+";
            tab[4, 9] = "---";
            tab[4, 10] = "+";
            tab[4, 11] = "---";
            tab[4, 12] = "+";
            tab[4, 13] = "---";
            tab[4, 14] = "+";
            tab[4, 15] = "---";
            tab[4, 16] = "+";
            tab[4, 17] = "---";
            tab[4, 18] = "+";
            tab[4, 19] = "   ";
            tab[4, 20] = "+";
            tab[4, 21] = "---";
            tab[4, 22] = "+";
            tab[4, 23] = "   ";
            tab[4, 24] = "+";
            tab[4, 25] = "---";
            tab[4, 26] = "+";
            tab[4, 27] = "---";
            tab[4, 28] = "+";
            tab[4, 29] = "---";
            tab[4, 30] = "+";
            tab[4, 31] = "---";
            tab[4, 32] = "+";
            tab[4, 33] = "---";
            tab[4, 34] = "+";
            tab[4, 35] = "   ";
            tab[4, 36] = "+";
            tab[4, 37] = "---";
            tab[4, 38] = "+";
            tab[4, 39] = "   ";
            tab[4, 40] = "+";
            tab[4, 41] = "---";
            

            tab[5, 1] = "mur";
            tab[5, 2] = "|";
            tab[5, 3] = "esp";
            tab[5, 4] = "|";
            tab[5, 5] = "mur";
            tab[5, 6] = "|";
            tab[5, 7] = "esp";
            tab[5, 8] = "|";
            tab[5, 9] = "mur";
            tab[5, 10] = "|";
            tab[5, 11] = "mur";
            tab[5, 12] = "|";
            tab[5, 13] = "mur";
            tab[5, 14] = "|";
            tab[5, 15] = "mur";
            tab[5, 16] = "|";
            tab[5, 17] = "mur";
            tab[5, 18] = "|";
            tab[5, 19] = "esp";
            tab[5, 20] = "|";
            tab[5, 21] = "mur";
            tab[5, 22] = "|";
            tab[5, 23] = "esp";
            tab[5, 24] = "|";
            tab[5, 25] = "mur";
            tab[5, 26] = "|";
            tab[5, 27] = "mur";
            tab[5, 28] = "|";
            tab[5, 29] = "mur";
            tab[5, 30] = "|";
            tab[5, 31] = "mur";
            tab[5, 32] = "|";
            tab[5, 33] = "mur";
            tab[5, 34] = "|";
            tab[5, 35] = "esp";
            tab[5, 36] = "|";
            tab[5, 37] = "mur";
            tab[5, 38] = "|";
            tab[5, 39] = "esp";
            tab[5, 40] = "|";
            tab[5, 41] = "mur";
            

            tab[6, 1] = "---";
            tab[6, 2] = "+";
            tab[6, 3] = "   ";
            tab[6, 4] = "+";
            tab[6, 5] = "---";
            tab[6, 6] = "+";
            tab[6, 7] = "   ";
            tab[6, 8] = "+";
            tab[6, 9] = "---";
            tab[6, 10] = "+";
            tab[6, 11] = "---";
            tab[6, 12] = "+";
            tab[6, 13] = "---";
            tab[6, 14] = "+";
            tab[6, 15] = "---";
            tab[6, 16] = "+";
            tab[6, 17] = "---";
            tab[6, 18] = "+";
            tab[6, 19] = "   ";
            tab[6, 20] = "+";
            tab[6, 21] = "---";
            tab[6, 22] = "+";
            tab[6, 23] = "   ";
            tab[6, 24] = "+";
            tab[6, 25] = "---";
            tab[6, 26] = "+";
            tab[6, 27] = "---";
            tab[6, 28] = "+";
            tab[6, 29] = "---";
            tab[6, 30] = "+";
            tab[6, 31] = "---";
            tab[6, 32] = "+";
            tab[6, 33] = "---";
            tab[6, 34] = "+";
            tab[6, 35] = "   ";
            tab[6, 36] = "+";
            tab[6, 37] = "---";
            tab[6, 38] = "+";
            tab[6, 39] = "   ";
            tab[6, 40] = "+";
            tab[6, 41] = "---";
            

            tab[7, 1] = "esp";
            tab[7, 2] = " ";
            tab[7, 3] = "esp";
            tab[7, 4] = " ";
            tab[7, 5] = "esp";
            tab[7, 6] = " ";
            tab[7, 7] = "esp";
            tab[7, 8] = "|";
            tab[7, 9] = "mur";
            tab[7, 10] = "|";
            tab[7, 11] = "esp";
            tab[7, 12] = " ";
            tab[7, 13] = "esp";
            tab[7, 14] = " ";
            tab[7, 15] = "esp";
            tab[7, 16] = " ";
            tab[7, 17] = "esp";
            tab[7, 18] = " ";
            tab[7, 19] = "esp";
            tab[7, 20] = "|";
            tab[7, 21] = "mur";
            tab[7, 22] = "|";
            tab[7, 23] = "esp";
            tab[7, 24] = " ";
            tab[7, 25] = "esp";
            tab[7, 26] = " ";
            tab[7, 27] = "esp";
            tab[7, 28] = " ";
            tab[7, 29] = "esp";
            tab[7, 30] = " ";
            tab[7, 31] = "esp";
            tab[7, 32] = "|";
            tab[7, 33] = "mur";
            tab[7, 34] = "|";
            tab[7, 35] = "esp";
            tab[7, 36] = " ";
            tab[7, 37] = "esp";
            tab[7, 38] = " ";
            tab[7, 39] = "esp";
            tab[7, 40] = " ";
            tab[7, 41] = "esp";


            tab[8, 1] = "   ";
            tab[8, 2] = "+";
            tab[8, 3] = "---";
            tab[8, 4] = "+";
            tab[8, 5] = "---";
            tab[8, 6] = "+";
            tab[8, 7] = "---";
            tab[8, 8] = "+";
            tab[8, 9] = "---";
            tab[8, 10] = "+";
            tab[8, 11] = "   ";
            tab[8, 12] = "+";
            tab[8, 13] = "---";
            tab[8, 14] = "+";
            tab[8, 15] = "   ";
            tab[8, 16] = "+";
            tab[8, 17] = "---";
            tab[8, 18] = "+";
            tab[8, 19] = "   ";
            tab[8, 20] = "+";
            tab[8, 21] = "---";
            tab[8, 22] = "+";
            tab[8, 23] = "   ";
            tab[8, 24] = "+";
            tab[8, 25] = "---";
            tab[8, 26] = "+";
            tab[8, 27] = "   ";
            tab[8, 28] = "+";
            tab[8, 29] = "---";
            tab[8, 30] = "+";
            tab[8, 31] = "   ";
            tab[8, 32] = "+";
            tab[8, 33] = "---";
            tab[8, 34] = "+";
            tab[8, 35] = "---";
            tab[8, 36] = "+";
            tab[8, 37] = "---";
            tab[8, 38] = "+";
            tab[8, 39] = "---";
            tab[8, 40] = "+";
            tab[8, 41] = "   ";

            tab[9, 1] = "esp";
            tab[9, 2] = "|";
            tab[9, 3] = "mur";
            tab[9, 4] = "|";
            tab[9, 5] = "mur";
            tab[9, 6] = "|";
            tab[9, 7] = "mur";
            tab[9, 8] = "|";
            tab[9, 9] = "mur";
            tab[9, 10] = "|";
            tab[9, 11] = "esp";
            tab[9, 12] = "|";
            tab[9, 13] = "mur";
            tab[9, 14] = "|";
            tab[9, 15] = "esp";
            tab[9, 16] = "|";
            tab[9, 17] = "mur";
            tab[9, 18] = "|";
            tab[9, 19] = "esp";
            tab[9, 20] = "|";
            tab[9, 21] = "mur";
            tab[9, 22] = "|";
            tab[9, 23] = "esp";
            tab[9, 24] = "|";
            tab[9, 25] = "mur";
            tab[9, 26] = "|";
            tab[9, 27] = "esp";
            tab[9, 28] = "|";
            tab[9, 29] = "mur";
            tab[9, 30] = "|";
            tab[9, 31] = "esp";
            tab[9, 32] = "|";
            tab[9, 33] = "mur";
            tab[9, 34] = "|";
            tab[9, 35] = "mur";
            tab[9, 36] = "|";
            tab[9, 37] = "mur";
            tab[9, 38] = "|";
            tab[9, 39] = "mur";
            tab[9, 40] = "|";
            tab[9, 41] = "esp";

            tab[10, 1] = "   ";
            tab[10, 2] = "+";
            tab[10, 3] = "---";
            tab[10, 4] = "+";
            tab[10, 5] = "---";
            tab[10, 6] = "+";
            tab[10, 7] = "---";
            tab[10, 8] = "+";
            tab[10, 9] = "---";
            tab[10, 10] = "+";
            tab[10, 11] = "   ";
            tab[10, 12] = "+";
            tab[10, 13] = "---";
            tab[10, 14] = "+";
            tab[10, 15] = "   ";
            tab[10, 16] = "+";
            tab[10, 17] = "---";
            tab[10, 18] = "+";
            tab[10, 19] = "   ";
            tab[10, 20] = "+";
            tab[10, 21] = "---";
            tab[10, 22] = "+";
            tab[10, 23] = "   ";
            tab[10, 24] = "+";
            tab[10, 25] = "---";
            tab[10, 26] = "+";
            tab[10, 27] = "   ";
            tab[10, 28] = "+";
            tab[10, 29] = "---";
            tab[10, 30] = "+";
            tab[10, 31] = "   ";
            tab[10, 32] = "+";
            tab[10, 33] = "---";
            tab[10, 34] = "+";
            tab[10, 35] = "---";
            tab[10, 36] = "+";
            tab[10, 37] = "---";
            tab[10, 38] = "+";
            tab[10, 39] = "---";
            tab[10, 40] = "+";
            tab[10, 41] = "   ";


            tab[11, 1] = "esp";
            tab[11, 2] = " ";
            tab[11, 3] = "esp";
            tab[11, 4] = "|";
            tab[11, 5] = "mur";
            tab[11, 6] = "|";
            tab[11, 7] = "esp";
            tab[11, 8] = " ";
            tab[11, 9] = "esp";
            tab[11, 10] = " ";
            tab[11, 11] = "esp";
            tab[11, 12] = "|";
            tab[11, 13] = "mur";
            tab[11, 14] = "|";
            tab[11, 15] = "esp";
            tab[11, 16] = "|";
            tab[11, 17] = "mur";
            tab[11, 18] = "|";
            tab[11, 19] = "esp";
            tab[11, 20] = " ";
            tab[11, 21] = "esp";
            tab[11, 22] = " ";
            tab[11, 23] = "esp";
            tab[11, 24] = "|";
            tab[11, 25] = "mur";
            tab[11, 26] = "|";
            tab[11, 27] = "esp";
            tab[11, 28] = "|";
            tab[11, 29] = "mur";
            tab[11, 30] = "|";
            tab[11, 31] = "esp";
            tab[11, 32] = " ";
            tab[11, 33] = "esp";
            tab[11, 34] = " ";
            tab[11, 35] = "esp";
            tab[11, 36] = "|";
            tab[11, 37] = "mur";
            tab[11, 38] = "|";
            tab[11, 39] = "esp";
            tab[11, 40] = " ";
            tab[11, 41] = "esp";

            tab[12, 1] = "---";
            tab[12, 2] = "+";
            tab[12, 3] = "   ";
            tab[12, 4] = "+";
            tab[12, 5] = "---";
            tab[12, 6] = "+";
            tab[12, 7] = "   ";
            tab[12, 8] = "+";
            tab[12, 9] = "---";
            tab[12, 10] = "+";
            tab[12, 11] = "---";
            tab[12, 12] = "+";
            tab[12, 13] = "---";
            tab[12, 14] = "+";
            tab[12, 15] = "   ";
            tab[12, 16] = "+";
            tab[12, 17] = "---";
            tab[12, 18] = "+";
            tab[12, 19] = "---";
            tab[12, 20] = "+";
            tab[12, 21] = "---";
            tab[12, 22] = "+";
            tab[12, 23] = "---";
            tab[12, 24] = "+";
            tab[12, 25] = "---";
            tab[12, 26] = "+";
            tab[12, 27] = "   ";
            tab[12, 28] = "+";
            tab[12, 29] = "---";
            tab[12, 30] = "+";
            tab[12, 31] = "---";
            tab[12, 32] = "+";
            tab[12, 33] = "---";
            tab[12, 34] = "+";
            tab[12, 35] = "   ";
            tab[12, 36] = "+";
            tab[12, 37] = "---";
            tab[12, 38] = "+";
            tab[12, 39] = "   ";
            tab[12, 40] = "+";
            tab[12, 41] = "---";

            tab[13, 1] = "mur";
            tab[13, 2] = "|";
            tab[13, 3] = "esp";
            tab[13, 4] = "|";
            tab[13, 5] = "mur";
            tab[13, 6] = "|";
            tab[13, 7] = "esp";
            tab[13, 8] = "|";
            tab[13, 9] = "mur";
            tab[13, 10] = "|";
            tab[13, 11] = "mur";
            tab[13, 12] = "|";
            tab[13, 13] = "mur";
            tab[13, 14] = "|";
            tab[13, 15] = "esp";
            tab[13, 16] = "|";
            tab[13, 17] = "mur";
            tab[13, 18] = "|";
            tab[13, 19] = "mur";
            tab[13, 20] = "|";
            tab[13, 21] = "mur";
            tab[13, 22] = "|";
            tab[13, 23] = "mur";
            tab[13, 24] = "|";
            tab[13, 25] = "mur";
            tab[13, 26] = "|";
            tab[13, 27] = "esp";
            tab[13, 28] = "|";
            tab[13, 29] = "mur";
            tab[13, 30] = "|";
            tab[13, 31] = "mur";
            tab[13, 32] = "|";
            tab[13, 33] = "mur";
            tab[13, 34] = "|";
            tab[13, 35] = "esp";
            tab[13, 36] = "|";
            tab[13, 37] = "mur";
            tab[13, 38] = "|";
            tab[13, 39] = "esp";
            tab[13, 40] = "|";
            tab[13, 41] = "mur";

            tab[14, 1] = "---";
            tab[14, 2] = "+";
            tab[14, 3] = "   ";
            tab[14, 4] = "+";
            tab[14, 5] = "---";
            tab[14, 6] = "+";
            tab[14, 7] = "   ";
            tab[14, 8] = "+";
            tab[14, 9] = "---";
            tab[14, 10] = "+";
            tab[14, 11] = "---";
            tab[14, 12] = "+";
            tab[14, 13] = "---";
            tab[14, 14] = "+";
            tab[14, 15] = "   ";
            tab[14, 16] = "+";
            tab[14, 17] = "---";
            tab[14, 18] = "+";
            tab[14, 19] = "---";
            tab[14, 20] = "+";
            tab[14, 21] = "---";
            tab[14, 22] = "+";
            tab[14, 23] = "---";
            tab[14, 24] = "+";
            tab[14, 25] = "---";
            tab[14, 26] = "+";
            tab[14, 27] = "   ";
            tab[14, 28] = "+";
            tab[14, 29] = "---";
            tab[14, 30] = "+";
            tab[14, 31] = "---";
            tab[14, 32] = "+";
            tab[14, 33] = "---";
            tab[14, 34] = "+";
            tab[14, 35] = "   ";
            tab[14, 36] = "+";
            tab[14, 37] = "---";
            tab[14, 38] = "+";
            tab[14, 39] = "   ";
            tab[14, 40] = "+";
            tab[14, 41] = "---";

            tab[15, 1] = "mur";
            tab[15, 2] = "|";
            tab[15, 3] = "esp";
            tab[15, 4] = "|";
            tab[15, 5] = "mur";
            tab[15, 6] = "|";
            tab[15, 7] = "esp";
            tab[15, 8] = " ";
            tab[15, 9] = "esp";
            tab[15, 10] = " ";
            tab[15, 11] = "esp";
            tab[15, 12] = " ";
            tab[15, 13] = "esp";
            tab[15, 14] = " ";
            tab[15, 15] = "esp";
            tab[15, 16] = " ";
            tab[15, 17] = "esp";
            tab[15, 18] = " ";
            tab[15, 19] = "esp";
            tab[15, 20] = " ";
            tab[15, 21] = "esp";
            tab[15, 22] = " ";
            tab[15, 23] = "esp";
            tab[15, 24] = " ";
            tab[15, 25] = "esp";
            tab[15, 26] = " ";
            tab[15, 27] = "esp";
            tab[15, 28] = " ";
            tab[15, 29] = "esp";
            tab[15, 30] = " ";
            tab[15, 31] = "esp";
            tab[15, 32] = " ";
            tab[15, 33] = "esp";
            tab[15, 34] = " ";
            tab[15, 35] = "esp";
            tab[15, 36] = "|";
            tab[15, 37] = "mur";
            tab[15, 38] = "|";
            tab[15, 39] = "esp";
            tab[15, 40] = "|";
            tab[15, 41] = "mur";

            tab[16, 1] = "---";
            tab[16, 2] = "+";
            tab[16, 3] = "   ";
            tab[16, 4] = "+";
            tab[16, 5] = "---";
            tab[16, 6] = "+";
            tab[16, 7] = "   ";
            tab[16, 8] = "+";
            tab[16, 9] = "---";
            tab[16, 10] = "+";
            tab[16, 11] = "---";
            tab[16, 12] = "+";
            tab[16, 13] = "---";
            tab[16, 14] = "+";
            tab[16, 15] = "   ";
            tab[16, 16] = "+";
            tab[16, 17] = "   ";
            tab[16, 18] = "+";
            tab[16, 19] = "---";
            tab[16, 20] = "+";
            tab[16, 21] = "   ";
            tab[16, 22] = "+";
            tab[16, 23] = "---";
            tab[16, 24] = "+";
            tab[16, 25] = "   ";
            tab[16, 26] = "+";
            tab[16, 27] = "   ";
            tab[16, 28] = "+";
            tab[16, 29] = "---";
            tab[16, 30] = "+";
            tab[16, 31] = "---";
            tab[16, 32] = "+";
            tab[16, 33] = "---";
            tab[16, 34] = "+";
            tab[16, 35] = "   ";
            tab[16, 36] = "+";
            tab[16, 37] = "---";
            tab[16, 38] = "+";
            tab[16, 39] = "   ";
            tab[16, 40] = "+";
            tab[16, 41] = "---";

            tab[17, 1] = "mur";
            tab[17, 2] = "|";
            tab[17, 3] = "esp";
            tab[17, 4] = "|";
            tab[17, 5] = "mur";
            tab[17, 6] = "|";
            tab[17, 7] = "esp";
            tab[17, 8] = "|";
            tab[17, 9] = "mur";
            tab[17, 10] = "|";
            tab[17, 11] = "mur";
            tab[17, 12] = "|";
            tab[17, 13] = "mur";
            tab[17, 14] = "|";
            tab[17, 15] = "esp";
            tab[17, 16] = " ";
            tab[17, 17] = "esp";
            tab[17, 18] = "|";
            tab[17, 19] = "mur";
            tab[17, 20] = "|";
            tab[17, 21] = "esp";
            tab[17, 22] = "|";
            tab[17, 23] = "mur";
            tab[17, 24] = "|";
            tab[17, 25] = "esp";
            tab[17, 26] = " ";
            tab[17, 27] = "esp";
            tab[17, 28] = "|";
            tab[17, 29] = "mur";
            tab[17, 30] = "|";
            tab[17, 31] = "mur";
            tab[17, 32] = "|";
            tab[17, 33] = "mur";
            tab[17, 34] = "|";
            tab[17, 35] = "esp";
            tab[17, 36] = "|";
            tab[17, 37] = "mur";
            tab[17, 38] = "|";
            tab[17, 39] = "esp";
            tab[17, 40] = "|";
            tab[17, 41] = "mur";

            tab[18, 1] = "---";
            tab[18, 2] = "+";
            tab[18, 3] = "   ";
            tab[18, 4] = "+";
            tab[18, 5] = "---";
            tab[18, 6] = "+";
            tab[18, 7] = "   ";
            tab[18, 8] = "+";
            tab[18, 9] = "---";
            tab[18, 10] = "+";
            tab[18, 11] = "---";
            tab[18, 12] = "+";
            tab[18, 13] = "---";
            tab[18, 14] = "+";
            tab[18, 15] = "   ";
            tab[18, 16] = "+";
            tab[18, 17] = "---";
            tab[18, 18] = "+";
            tab[18, 19] = "---";
            tab[18, 20] = "+";
            tab[18, 21] = "   ";
            tab[18, 22] = "+";
            tab[18, 23] = "---";
            tab[18, 24] = "+";
            tab[18, 25] = "---";
            tab[18, 26] = "+";
            tab[18, 27] = "   ";
            tab[18, 28] = "+";
            tab[18, 29] = "---";
            tab[18, 30] = "+";
            tab[18, 31] = "---";
            tab[18, 32] = "+";
            tab[18, 33] = "---";
            tab[18, 34] = "+";
            tab[18, 35] = "   ";
            tab[18, 36] = "+";
            tab[18, 37] = "---";
            tab[18, 38] = "+";
            tab[18, 39] = "   ";
            tab[18, 40] = "+";
            tab[18, 41] = "---";

            tab[19, 1] = "mur";
            tab[19, 2] = "|";
            tab[19, 3] = "esp";
            tab[19, 4] = " ";
            tab[19, 5] = "esp";
            tab[19, 6] = " ";
            tab[19, 7] = "esp";
            tab[19, 8] = " ";
            tab[19, 9] = "esp";
            tab[19, 10] = " ";
            tab[19, 11] = "esp";
            tab[19, 12] = "|";
            tab[19, 13] = "mur";
            tab[19, 14] = "|";
            tab[19, 15] = "esp";
            tab[19, 16] = "|";
            tab[19, 17] = "mur";
            tab[19, 18] = "|";
            tab[19, 19] = "mur";
            tab[19, 20] = "|";
            tab[19, 21] = "esp";
            tab[19, 22] = "|";
            tab[19, 23] = "mur";
            tab[19, 24] = "|";
            tab[19, 25] = "mur";
            tab[19, 26] = "|";
            tab[19, 27] = "esp";
            tab[19, 28] = "|";
            tab[19, 29] = "mur";
            tab[19, 30] = "|";
            tab[19, 31] = "esp";
            tab[19, 32] = " ";
            tab[19, 33] = "esp";
            tab[19, 34] = " ";
            tab[19, 35] = "esp";
            tab[19, 36] = " ";
            tab[19, 37] = "esp";
            tab[19, 38] = " ";
            tab[19, 39] = "esp";
            tab[19, 40] = "|";
            tab[19, 41] = "mur";

            tab[20, 1] = "---";
            tab[20, 2] = "+";
            tab[20, 3] = "   ";
            tab[20, 4] = "+";
            tab[20, 5] = "---";
            tab[20, 6] = "+";
            tab[20, 7] = "---";
            tab[20, 8] = "+";
            tab[20, 9] = "---";
            tab[20, 10] = "+";
            tab[20, 11] = "   ";
            tab[20, 12] = "+";
            tab[20, 13] = "---";
            tab[20, 14] = "+";
            tab[20, 15] = "   ";
            tab[20, 16] = "+";
            tab[20, 17] = "---";
            tab[20, 18] = "+";
            tab[20, 19] = "---";
            tab[20, 20] = "+";
            tab[20, 21] = "   ";
            tab[20, 22] = "+";
            tab[20, 23] = "---";
            tab[20, 24] = "+";
            tab[20, 25] = "---";
            tab[20, 26] = "+";
            tab[20, 27] = "   ";
            tab[20, 28] = "+";
            tab[20, 29] = "---";
            tab[20, 30] = "+";
            tab[20, 31] = "   ";
            tab[20, 32] = "+";
            tab[20, 33] = "---";
            tab[20, 34] = "+";
            tab[20, 35] = "---";
            tab[20, 36] = "+";
            tab[20, 37] = "---";
            tab[20, 38] = "+";
            tab[20, 39] = "   ";
            tab[20, 40] = "+";
            tab[20, 41] = "---";

            tab[21, 1] = "mur";
            tab[21, 2] = "|";
            tab[21, 3] = "esp";
            tab[21, 4] = "|";
            tab[21, 5] = "mur";
            tab[21, 6] = "|";
            tab[21, 7] = "mur";
            tab[21, 8] = "|";
            tab[21, 9] = "mur";
            tab[21, 10] = "|";
            tab[21, 11] = "esp";
            tab[21, 12] = "|";
            tab[21, 13] = "mur";
            tab[21, 14] = "|";
            tab[21, 15] = "esp";
            tab[21, 16] = " ";
            tab[21, 17] = "esp";
            tab[21, 18] = " ";
            tab[21, 19] = "esp";
            tab[21, 20] = " ";
            tab[21, 21] = "esp";
            tab[21, 22] = " ";
            tab[21, 23] = "esp";
            tab[21, 24] = " ";
            tab[21, 25] = "esp";
            tab[21, 26] = " ";
            tab[21, 27] = "esp";
            tab[21, 28] = "|";
            tab[21, 29] = "mur";
            tab[21, 30] = "|";
            tab[21, 31] = "esp";
            tab[21, 32] = "|";
            tab[21, 33] = "mur";
            tab[21, 34] = "|";
            tab[21, 35] = "mur";
            tab[21, 36] = "|";
            tab[21, 37] = "mur";
            tab[21, 38] = "|";
            tab[21, 39] = "esp";
            tab[21, 40] = "|";
            tab[21, 41] = "mur";

            tab[22, 1] = "---";
            tab[22, 2] = "+";
            tab[22, 3] = "   ";
            tab[22, 4] = "+";
            tab[22, 5] = "---";
            tab[22, 6] = "+";
            tab[22, 7] = "---";
            tab[22, 8] = "+";
            tab[22, 9] = "---";
            tab[22, 10] = "+";
            tab[22, 11] = "   ";
            tab[22, 12] = "+";
            tab[22, 13] = "---";
            tab[22, 14] = "+";
            tab[22, 15] = "   ";
            tab[22, 16] = "+";
            tab[22, 17] = "---";
            tab[22, 18] = "+";
            tab[22, 19] = "---";
            tab[22, 20] = "+";
            tab[22, 21] = "   ";
            tab[22, 22] = "+";
            tab[22, 23] = "---";
            tab[22, 24] = "+";
            tab[22, 25] = "---";
            tab[22, 26] = "+";
            tab[22, 27] = "   ";
            tab[22, 28] = "+";
            tab[22, 29] = "---";
            tab[22, 30] = "+";
            tab[22, 31] = "   ";
            tab[22, 32] = "+";
            tab[22, 33] = "---";
            tab[22, 34] = "+";
            tab[22, 35] = "---";
            tab[22, 36] = "+";
            tab[22, 37] = "---";
            tab[22, 38] = "+";
            tab[22, 39] = "   ";
            tab[22, 40] = "+";
            tab[22, 41] = "---";

            tab[23, 1] = "mur";
            tab[23, 2] = "|";
            tab[23, 3] = "esp";
            tab[23, 4] = " ";
            tab[23, 5] = "esp";
            tab[23, 6] = " ";
            tab[23, 7] = "esp";
            tab[23, 8] = " ";
            tab[23, 9] = "esp";
            tab[23, 10] = " ";
            tab[23, 11] = "esp";
            tab[23, 12] = "|";
            tab[23, 13] = "mur";
            tab[23, 14] = "|";
            tab[23, 15] = "esp";
            tab[23, 16] = "|";
            tab[23, 17] = "mur";
            tab[23, 18] = "|";
            tab[23, 19] = "mur";
            tab[23, 20] = "|";
            tab[23, 21] = "esp";
            tab[23, 22] = "|";
            tab[23, 23] = "mur";
            tab[23, 24] = "|";
            tab[23, 25] = "mur";
            tab[23, 26] = "|";
            tab[23, 27] = "esp";
            tab[23, 28] = "|";
            tab[23, 29] = "mur";
            tab[23, 30] = "|";
            tab[23, 31] = "esp";
            tab[23, 32] = " ";
            tab[23, 33] = "esp";
            tab[23, 34] = " ";
            tab[23, 35] = "esp";
            tab[23, 36] = " ";
            tab[23, 37] = "esp";
            tab[23, 38] = " ";
            tab[23, 39] = "esp";
            tab[23, 40] = "|";
            tab[23, 41] = "mur";

            tab[24, 1] = "---";
            tab[24, 2] = "+";
            tab[24, 3] = "   ";
            tab[24, 4] = "+";
            tab[24, 5] = "---";
            tab[24, 6] = "+";
            tab[24, 7] = "   ";
            tab[24, 8] = "+";
            tab[24, 9] = "---";
            tab[24, 10] = "+";
            tab[24, 11] = "---";
            tab[24, 12] = "+";
            tab[24, 13] = "---";
            tab[24, 14] = "+";
            tab[24, 15] = "   ";
            tab[24, 16] = "+";
            tab[24, 17] = "---";
            tab[24, 18] = "+";
            tab[24, 19] = "---";
            tab[24, 20] = "+";
            tab[24, 21] = "   ";
            tab[24, 22] = "+";
            tab[24, 23] = "---";
            tab[24, 24] = "+";
            tab[24, 25] = "---";
            tab[24, 26] = "+";
            tab[24, 27] = "   ";
            tab[24, 28] = "+";
            tab[24, 29] = "---";
            tab[24, 30] = "+";
            tab[24, 31] = "---";
            tab[24, 32] = "+";
            tab[24, 33] = "---";
            tab[24, 34] = "+";
            tab[24, 35] = "   ";
            tab[24, 36] = "+";
            tab[24, 37] = "---";
            tab[24, 38] = "+";
            tab[24, 39] = "   ";
            tab[24, 40] = "+";
            tab[24, 41] = "---";

            tab[25, 1] = "mur";
            tab[25, 2] = "|";
            tab[25, 3] = "esp";
            tab[25, 4] = "|";
            tab[25, 5] = "mur";
            tab[25, 6] = "|";
            tab[25, 7] = "esp";
            tab[25, 8] = "|";
            tab[25, 9] = "mur";
            tab[25, 10] = "|";
            tab[25, 11] = "mur";
            tab[25, 12] = "|";
            tab[25, 13] = "mur";
            tab[25, 14] = "|";
            tab[25, 15] = "esp";
            tab[25, 16] = " ";
            tab[25, 17] = "esp";
            tab[25, 18] = "|";
            tab[25, 19] = "mur";
            tab[25, 20] = "|";
            tab[25, 21] = "esp";
            tab[25, 22] = "|";
            tab[25, 23] = "mur";
            tab[25, 24] = "|";
            tab[25, 25] = "esp";
            tab[25, 26] = " ";
            tab[25, 27] = "esp";
            tab[25, 28] = "|";
            tab[25, 29] = "mur";
            tab[25, 30] = "|";
            tab[25, 31] = "mur";
            tab[25, 32] = "|";
            tab[25, 33] = "mur";
            tab[25, 34] = "|";
            tab[25, 35] = "esp";
            tab[25, 36] = "|";
            tab[25, 37] = "mur";
            tab[25, 38] = "|";
            tab[25, 39] = "esp";
            tab[25, 40] = "|";
            tab[25, 41] = "mur";

            tab[26, 1] = "---";
            tab[26, 2] = "+";
            tab[26, 3] = "   ";
            tab[26, 4] = "+";
            tab[26, 5] = "---";
            tab[26, 6] = "+";
            tab[26, 7] = "   ";
            tab[26, 8] = "+";
            tab[26, 9] = "---";
            tab[26, 10] = "+";
            tab[26, 11] = "---";
            tab[26, 12] = "+";
            tab[26, 13] = "---";
            tab[26, 14] = "+";
            tab[26, 15] = "   ";
            tab[26, 16] = "+";
            tab[26, 17] = "   ";
            tab[26, 18] = "+";
            tab[26, 19] = "---";
            tab[26, 20] = "+";
            tab[26, 21] = "   ";
            tab[26, 22] = "+";
            tab[26, 23] = "---";
            tab[26, 24] = "+";
            tab[26, 25] = "   ";
            tab[26, 26] = "+";
            tab[26, 27] = "   ";
            tab[26, 28] = "+";
            tab[26, 29] = "---";
            tab[26, 30] = "+";
            tab[26, 31] = "---";
            tab[26, 32] = "+";
            tab[26, 33] = "---";
            tab[26, 34] = "+";
            tab[26, 35] = "   ";
            tab[26, 36] = "+";
            tab[26, 37] = "---";
            tab[26, 38] = "+";
            tab[26, 39] = "   ";
            tab[26, 40] = "+";
            tab[26, 41] = "---";

            tab[27, 1] = "mur";
            tab[27, 2] = "|";
            tab[27, 3] = "esp";
            tab[27, 4] = "|";
            tab[27, 5] = "mur";
            tab[27, 6] = "|";
            tab[27, 7] = "esp";
            tab[27, 8] = " ";
            tab[27, 9] = "esp";
            tab[27, 10] = " ";
            tab[27, 11] = "esp";
            tab[27, 12] = " ";
            tab[27, 13] = "esp";
            tab[27, 14] = " ";
            tab[27, 15] = "esp";
            tab[27, 16] = " ";
            tab[27, 17] = "esp";
            tab[27, 18] = " ";
            tab[27, 19] = "esp";
            tab[27, 20] = " ";
            tab[27, 21] = "esp";
            tab[27, 22] = " ";
            tab[27, 23] = "esp";
            tab[27, 24] = " ";
            tab[27, 25] = "esp";
            tab[27, 26] = " ";
            tab[27, 27] = "esp";
            tab[27, 28] = " ";
            tab[27, 29] = "esp";
            tab[27, 30] = " ";
            tab[27, 31] = "esp";
            tab[27, 32] = " ";
            tab[27, 33] = "esp";
            tab[27, 34] = " ";
            tab[27, 35] = "esp";
            tab[27, 36] = "|";
            tab[27, 37] = "mur";
            tab[27, 38] = "|";
            tab[27, 39] = "esp";
            tab[27, 40] = "|";
            tab[27, 41] = "mur";

            tab[28, 1] = "---";
            tab[28, 2] = "+";
            tab[28, 3] = "   ";
            tab[28, 4] = "+";
            tab[28, 5] = "---";
            tab[28, 6] = "+";
            tab[28, 7] = "   ";
            tab[28, 8] = "+";
            tab[28, 9] = "---";
            tab[28, 10] = "+";
            tab[28, 11] = "---";
            tab[28, 12] = "+";
            tab[28, 13] = "---";
            tab[28, 14] = "+";
            tab[28, 15] = "   ";
            tab[28, 16] = "+";
            tab[28, 17] = "---";
            tab[28, 18] = "+";
            tab[28, 19] = "---";
            tab[28, 20] = "+";
            tab[28, 21] = "---";
            tab[28, 22] = "+";
            tab[28, 23] = "---";
            tab[28, 24] = "+";
            tab[28, 25] = "---";
            tab[28, 26] = "+";
            tab[28, 27] = "   ";
            tab[28, 28] = "+";
            tab[28, 29] = "---";
            tab[28, 30] = "+";
            tab[28, 31] = "---";
            tab[28, 32] = "+";
            tab[28, 33] = "---";
            tab[28, 34] = "+";
            tab[28, 35] = "   ";
            tab[28, 36] = "+";
            tab[28, 37] = "---";
            tab[28, 38] = "+";
            tab[28, 39] = "   ";
            tab[28, 40] = "+";
            tab[28, 41] = "---";

            tab[29, 1] = "mur";
            tab[29, 2] = "|";
            tab[29, 3] = "esp";
            tab[29, 4] = "|";
            tab[29, 5] = "mur";
            tab[29, 6] = "|";
            tab[29, 7] = "esp";
            tab[29, 8] = "|";
            tab[29, 9] = "mur";
            tab[29, 10] = "|";
            tab[29, 11] = "mur";
            tab[29, 12] = "|";
            tab[29, 13] = "mur";
            tab[29, 14] = "|";
            tab[29, 15] = "esp";
            tab[29, 16] = "|";
            tab[29, 17] = "mur";
            tab[29, 18] = "|";
            tab[29, 19] = "mur";
            tab[29, 20] = "|";
            tab[29, 21] = "mur";
            tab[29, 22] = "|";
            tab[29, 23] = "mur";
            tab[29, 24] = "|";
            tab[29, 25] = "mur";
            tab[29, 26] = "|";
            tab[29, 27] = "esp";
            tab[29, 28] = "|";
            tab[29, 29] = "mur";
            tab[29, 30] = "|";
            tab[29, 31] = "mur";
            tab[29, 32] = "|";
            tab[29, 33] = "mur";
            tab[29, 34] = "|";
            tab[29, 35] = "esp";
            tab[29, 36] = "|";
            tab[29, 37] = "mur";
            tab[29, 38] = "|";
            tab[29, 39] = "esp";
            tab[29, 40] = "|";
            tab[29, 41] = "mur";

            tab[30, 1] = "---";
            tab[30, 2] = "+";
            tab[30, 3] = "   ";
            tab[30, 4] = "+";
            tab[30, 5] = "---";
            tab[30, 6] = "+";
            tab[30, 7] = "   ";
            tab[30, 8] = "+";
            tab[30, 9] = "---";
            tab[30, 10] = "+";
            tab[30, 11] = "---";
            tab[30, 12] = "+";
            tab[30, 13] = "---";
            tab[30, 14] = "+";
            tab[30, 15] = "   ";
            tab[30, 16] = "+";
            tab[30, 17] = "---";
            tab[30, 18] = "+";
            tab[30, 19] = "---";
            tab[30, 20] = "+";
            tab[30, 21] = "---";
            tab[30, 22] = "+";
            tab[30, 23] = "---";
            tab[30, 24] = "+";
            tab[30, 25] = "---";
            tab[30, 26] = "+";
            tab[30, 27] = "   ";
            tab[30, 28] = "+";
            tab[30, 29] = "---";
            tab[30, 30] = "+";
            tab[30, 31] = "---";
            tab[30, 32] = "+";
            tab[30, 33] = "---";
            tab[30, 34] = "+";
            tab[30, 35] = "   ";
            tab[30, 36] = "+";
            tab[30, 37] = "---";
            tab[30, 38] = "+";
            tab[30, 39] = "   ";
            tab[30, 40] = "+";
            tab[30, 41] = "---";

            tab[31, 1] = "esp";
            tab[31, 2] = " ";
            tab[31, 3] = "esp";
            tab[31, 4] = "|";
            tab[31, 5] = "mur";
            tab[31, 6] = "|";
            tab[31, 7] = "esp";
            tab[31, 8] = " ";
            tab[31, 9] = "esp";
            tab[31, 10] = " ";
            tab[31, 11] = "esp";
            tab[31, 12] = "|";
            tab[31, 13] = "mur";
            tab[31, 14] = "|";
            tab[31, 15] = "esp";
            tab[31, 16] = "|";
            tab[31, 17] = "mur";
            tab[31, 18] = "|";
            tab[31, 19] = "esp";
            tab[31, 20] = " ";
            tab[31, 21] = "esp";
            tab[31, 22] = " ";
            tab[31, 23] = "esp";
            tab[31, 24] = "|";
            tab[31, 25] = "mur";
            tab[31, 26] = "|";
            tab[31, 27] = "esp";
            tab[31, 28] = "|";
            tab[31, 29] = "mur";
            tab[31, 30] = "|";
            tab[31, 31] = "esp";
            tab[31, 32] = " ";
            tab[31, 33] = "esp";
            tab[31, 34] = " ";
            tab[31, 35] = "esp";
            tab[31, 36] = "|";
            tab[31, 37] = "mur";
            tab[31, 38] = "|";
            tab[31, 39] = "esp";
            tab[31, 40] = " ";
            tab[31, 41] = "esp";

            tab[32, 1] = "   ";
            tab[32, 2] = "+";
            tab[32, 3] = "---";
            tab[32, 4] = "+";
            tab[32, 5] = "---";
            tab[32, 6] = "+";
            tab[32, 7] = "---";
            tab[32, 8] = "+";
            tab[32, 9] = "---";
            tab[32, 10] = "+";
            tab[32, 11] = "   ";
            tab[32, 12] = "+";
            tab[32, 13] = "---";
            tab[32, 14] = "+";
            tab[32, 15] = "   ";
            tab[32, 16] = "+";
            tab[32, 17] = "---";
            tab[32, 18] = "+";
            tab[32, 19] = "   ";
            tab[32, 20] = "+";
            tab[32, 21] = "---";
            tab[32, 22] = "+";
            tab[32, 23] = "   ";
            tab[32, 24] = "+";
            tab[32, 25] = "---";
            tab[32, 26] = "+";
            tab[32, 27] = "   ";
            tab[32, 28] = "+";
            tab[32, 29] = "---";
            tab[32, 30] = "+";
            tab[32, 31] = "   ";
            tab[32, 32] = "+";
            tab[32, 33] = "---";
            tab[32, 34] = "+";
            tab[32, 35] = "---";
            tab[32, 36] = "+";
            tab[32, 37] = "---";
            tab[32, 38] = "+";
            tab[32, 39] = "---";
            tab[32, 40] = "+";
            tab[32, 41] = "   ";

            tab[33, 1] = "esp";
            tab[33, 2] = "|";
            tab[33, 3] = "mur";
            tab[33, 4] = "|";
            tab[33, 5] = "mur";
            tab[33, 6] = "|";
            tab[33, 7] = "mur";
            tab[33, 8] = "|";
            tab[33, 9] = "mur";
            tab[33, 10] = "|";
            tab[33, 11] = "esp";
            tab[33, 12] = "|";
            tab[33, 13] = "mur";
            tab[33, 14] = "|";
            tab[33, 15] = "esp";
            tab[33, 16] = "|";
            tab[33, 17] = "mur";
            tab[33, 18] = "|";
            tab[33, 19] = "esp";
            tab[33, 20] = "|";
            tab[33, 21] = "mur";
            tab[33, 22] = "|";
            tab[33, 23] = "esp";
            tab[33, 24] = "|";
            tab[33, 25] = "mur";
            tab[33, 26] = "|";
            tab[33, 27] = "esp";
            tab[33, 28] = "|";
            tab[33, 29] = "mur";
            tab[33, 30] = "|";
            tab[33, 31] = "esp";
            tab[33, 32] = "|";
            tab[33, 33] = "mur";
            tab[33, 34] = "|";
            tab[33, 35] = "mur";
            tab[33, 36] = "|";
            tab[33, 37] = "mur";
            tab[33, 38] = "|";
            tab[33, 39] = "mur";
            tab[33, 40] = "|";
            tab[33, 41] = "esp";

            tab[34, 1] = "   ";
            tab[34, 2] = "+";
            tab[34, 3] = "---";
            tab[34, 4] = "+";
            tab[34, 5] = "---";
            tab[34, 6] = "+";
            tab[34, 7] = "---";
            tab[34, 8] = "+";
            tab[34, 9] = "---";
            tab[34, 10] = "+";
            tab[34, 11] = "   ";
            tab[34, 12] = "+";
            tab[34, 13] = "---";
            tab[34, 14] = "+";
            tab[34, 15] = "   ";
            tab[34, 16] = "+";
            tab[34, 17] = "---";
            tab[34, 18] = "+";
            tab[34, 19] = "   ";
            tab[34, 20] = "+";
            tab[34, 21] = "---";
            tab[34, 22] = "+";
            tab[34, 23] = "   ";
            tab[34, 24] = "+";
            tab[34, 25] = "---";
            tab[34, 26] = "+";
            tab[34, 27] = "   ";
            tab[34, 28] = "+";
            tab[34, 29] = "---";
            tab[34, 30] = "+";
            tab[34, 31] = "   ";
            tab[34, 32] = "+";
            tab[34, 33] = "---";
            tab[34, 34] = "+";
            tab[34, 35] = "---";
            tab[34, 36] = "+";
            tab[34, 37] = "---";
            tab[34, 38] = "+";
            tab[34, 39] = "---";
            tab[34, 40] = "+";
            tab[34, 41] = "   ";

            tab[35, 1] = "esp";
            tab[35, 2] = " ";
            tab[35, 3] = "esp";
            tab[35, 4] = " ";
            tab[35, 5] = "esp";
            tab[35, 6] = " ";
            tab[35, 7] = "esp";
            tab[35, 8] = "|";
            tab[35, 9] = "mur";
            tab[35, 10] = "|";
            tab[35, 11] = "esp";
            tab[35, 12] = " ";
            tab[35, 13] = "esp";
            tab[35, 14] = " ";
            tab[35, 15] = "esp";
            tab[35, 16] = " ";
            tab[35, 17] = "esp";
            tab[35, 18] = " ";
            tab[35, 19] = "esp";
            tab[35, 20] = "|";
            tab[35, 21] = "mur";
            tab[35, 22] = "|";
            tab[35, 23] = "esp";
            tab[35, 24] = " ";
            tab[35, 25] = "esp";
            tab[35, 26] = " ";
            tab[35, 27] = "esp";
            tab[35, 28] = " ";
            tab[35, 29] = "esp";
            tab[35, 30] = " ";
            tab[35, 31] = "esp";
            tab[35, 32] = "|";
            tab[35, 33] = "mur";
            tab[35, 34] = "|";
            tab[35, 35] = "esp";
            tab[35, 36] = " ";
            tab[35, 37] = "esp";
            tab[35, 38] = " ";
            tab[35, 39] = "esp";
            tab[35, 40] = " ";
            tab[35, 41] = "esp";

            tab[36, 1] = "---";
            tab[36, 2] = "+";
            tab[36, 3] = "   ";
            tab[36, 4] = "+";
            tab[36, 5] = "---";
            tab[36, 6] = "+";
            tab[36, 7] = "   ";
            tab[36, 8] = "+";
            tab[36, 9] = "---";
            tab[36, 10] = "+";
            tab[36, 11] = "---";
            tab[36, 12] = "+";
            tab[36, 13] = "---";
            tab[36, 14] = "+";
            tab[36, 15] = "---";
            tab[36, 16] = "+";
            tab[36, 17] = "---";
            tab[36, 18] = "+";
            tab[36, 19] = "   ";
            tab[36, 20] = "+";
            tab[36, 21] = "---";
            tab[36, 22] = "+";
            tab[36, 23] = "   ";
            tab[36, 24] = "+";
            tab[36, 25] = "---";
            tab[36, 26] = "+";
            tab[36, 27] = "---";
            tab[36, 28] = "+";
            tab[36, 29] = "---";
            tab[36, 30] = "+";
            tab[36, 31] = "---";
            tab[36, 32] = "+";
            tab[36, 33] = "---";
            tab[36, 34] = "+";
            tab[36, 35] = "   ";
            tab[36, 36] = "+";
            tab[36, 37] = "---";
            tab[36, 38] = "+";
            tab[36, 39] = "   ";
            tab[36, 40] = "+";
            tab[36, 41] = "---";
            

            tab[37, 1] = "mur";
            tab[37, 2] = "|";
            tab[37, 3] = "esp";
            tab[37, 4] = "|";
            tab[37, 5] = "mur";
            tab[37, 6] = "|";
            tab[37, 7] = "esp";
            tab[37, 8] = "|";
            tab[37, 9] = "mur";
            tab[37, 10] = "|";
            tab[37, 11] = "mur";
            tab[37, 12] = "|";
            tab[37, 13] = "mur";
            tab[37, 14] = "|";
            tab[37, 15] = "mur";
            tab[37, 16] = "|";
            tab[37, 17] = "mur";
            tab[37, 18] = "|";
            tab[37, 19] = "esp";
            tab[37, 20] = "|";
            tab[37, 21] = "mur";
            tab[37, 22] = "|";
            tab[37, 23] = "esp";
            tab[37, 24] = "|";
            tab[37, 25] = "mur";
            tab[37, 26] = "|";
            tab[37, 27] = "mur";
            tab[37, 28] = "|";
            tab[37, 29] = "mur";
            tab[37, 30] = "|";
            tab[37, 31] = "mur";
            tab[37, 32] = "|";
            tab[37, 33] = "mur";
            tab[37, 34] = "|";
            tab[37, 35] = "esp";
            tab[37, 36] = "|";
            tab[37, 37] = "mur";
            tab[37, 38] = "|";
            tab[37, 39] = "esp";
            tab[37, 40] = "|";
            tab[37, 41] = "mur";
            

            tab[38, 1] = "---";
            tab[38, 2] = "+";
            tab[38, 3] = "   ";
            tab[38, 4] = "+";
            tab[38, 5] = "---";
            tab[38, 6] = "+";
            tab[38, 7] = "   ";
            tab[38, 8] = "+";
            tab[38, 9] = "---";
            tab[38, 10] = "+";
            tab[38, 11] = "---";
            tab[38, 12] = "+";
            tab[38, 13] = "---";
            tab[38, 14] = "+";
            tab[38, 15] = "---";
            tab[38, 16] = "+";
            tab[38, 17] = "---";
            tab[38, 18] = "+";
            tab[38, 19] = "   ";
            tab[38, 20] = "+";
            tab[38, 21] = "---";
            tab[38, 22] = "+";
            tab[38, 23] = "   ";
            tab[38, 24] = "+";
            tab[38, 25] = "---";
            tab[38, 26] = "+";
            tab[38, 27] = "---";
            tab[38, 28] = "+";
            tab[38, 29] = "---";
            tab[38, 30] = "+";
            tab[38, 31] = "---";
            tab[38, 32] = "+";
            tab[38, 33] = "---";
            tab[38, 34] = "+";
            tab[38, 35] = "   ";
            tab[38, 36] = "+";
            tab[38, 37] = "---";
            tab[38, 38] = "+";
            tab[38, 39] = "   ";
            tab[38, 40] = "+";
            tab[38, 41] = "---";
            

            tab[39, 1] = "mur";
            tab[39, 2] = "|";
            tab[39, 3] = "esp";
            tab[39, 4] = " ";
            tab[39, 5] = "esp";
            tab[39, 6] = " ";
            tab[39, 7] = "esp";
            tab[39, 8] = "|";
            tab[39, 9] = "mur";
            tab[39, 10] = "|";
            tab[39, 11] = "esp";
            tab[39, 12] = " ";
            tab[39, 13] = "esp";
            tab[39, 14] = " ";
            tab[39, 15] = "esp";
            tab[39, 16] = " ";
            tab[39, 17] = "esp";
            tab[39, 18] = " ";
            tab[39, 19] = "esp";
            tab[39, 20] = " ";
            tab[39, 21] = "esp";
            tab[39, 22] = " ";
            tab[39, 23] = "esp";
            tab[39, 24] = " ";
            tab[39, 25] = "esp";
            tab[39, 26] = " ";
            tab[39, 27] = "esp";
            tab[39, 28] = " ";
            tab[39, 29] = "esp";
            tab[39, 30] = " ";
            tab[39, 31] = "esp";
            tab[39, 32] = "|";
            tab[39, 33] = "mur";
            tab[39, 34] = "|";
            tab[39, 35] = "esp";
            tab[39, 36] = " ";
            tab[39, 37] = "esp";
            tab[39, 38] = " ";
            tab[39, 39] = "esp";
            tab[39, 40] = "|";
            tab[39, 41] = "mur";
            

            tab[40, 1] = "---";
            tab[40, 2] = "+";
            tab[40, 3] = "---";
            tab[40, 4] = "+";
            tab[40, 5] = "---";
            tab[40, 6] = "+";
            tab[40, 7] = "   ";
            tab[40, 8] = "+";
            tab[40, 9] = "---";
            tab[40, 10] = "+";
            tab[40, 11] = "   ";
            tab[40, 12] = "+";
            tab[40, 13] = "---";
            tab[40, 14] = "+";
            tab[40, 15] = "---";
            tab[40, 16] = "+";
            tab[40, 17] = "---";
            tab[40, 18] = "+";
            tab[40, 19] = "---";
            tab[40, 20] = "+";
            tab[40, 21] = "---";
            tab[40, 22] = "+";
            tab[40, 23] = "---";
            tab[40, 24] = "+";
            tab[40, 25] = "---";
            tab[40, 26] = "+";
            tab[40, 27] = "---";
            tab[40, 28] = "+";
            tab[40, 29] = "---";
            tab[40, 30] = "+";
            tab[40, 31] = "   ";
            tab[40, 32] = "+";
            tab[40, 33] = "---";
            tab[40, 34] = "+";
            tab[40, 35] = "   ";
            tab[40, 36] = "+";
            tab[40, 37] = "---";
            tab[40, 38] = "+";
            tab[40, 39] = "---";
            tab[40, 40] = "+";
            tab[40, 41] = "---";
            

            tab[41, 1] = "mur";
            tab[41, 2] = "|";
            tab[41, 3] = "mur";
            tab[41, 4] = "|";
            tab[41, 5] = "mur";
            tab[41, 6] = "|";
            tab[41, 7] = "esp";
            tab[41, 8] = " ";
            tab[41, 9] = "esp";
            tab[41, 10] = " ";
            tab[41, 11] = "esp";
            tab[41, 12] = "|";
            tab[41, 13] = "mur";
            tab[41, 14] = "|";
            tab[41, 15] = "mur";
            tab[41, 16] = "|";
            tab[41, 17] = "mur";
            tab[41, 18] = "|";
            tab[41, 19] = "mur";
            tab[41, 20] = "|";
            tab[41, 21] = "mur";
            tab[41, 22] = "|";
            tab[41, 23] = "mur";
            tab[41, 24] = "|";
            tab[41, 25] = "mur";
            tab[41, 26] = "|";
            tab[41, 27] = "mur";
            tab[41, 28] = "|";
            tab[41, 29] = "mur";
            tab[41, 30] = "|";
            tab[41, 31] = "esp";
            tab[41, 32] = " ";
            tab[41, 33] = "esp";
            tab[41, 34] = " ";
            tab[41, 35] = "esp";
            tab[41, 36] = "|";
            tab[41, 37] = "mur";
            tab[41, 38] = "|";
            tab[41, 39] = "mur";
            tab[41, 40] = "|";
            tab[41, 41] = "mur";
            


        }
        // Méthode pour générer le labyrinthe
        public void Generatelaby()
        {

            // Initialiser le labyrinthe avec des murs
            Initializelaby();

            // Commencer le parcours en profondeur 
            parcourProfondeur(1, 1);
            creationPorteAleatoire();
            creationflammeAleatoire();
            creationdashAleatoire();
            creationlyreAleatoire();
            creationmultAleatoire();
            creationbouclierAleatoire();
            creationcoeurAleatoire();
            creationvitesseAleatoire();
            creationbalanceAleatoire();
            creationfloconAleatoire();
            //affichage des statistiques 
            Console.WriteLine($"nombre de portes : {compteurPorte}");
            Console.WriteLine($"pourcentage de portes : {compteurPorte * 100 / (760)}%");
            Console.WriteLine($"nombre de murs : {760 - compteurPorte}");
            Console.WriteLine($"pourcentage de murs : {100 - (compteurPorte * 100 / (760))}%");
        }

        // Méthode pour initialiser le labyrinthe avec des murs
        //Aucun paramètre
        //Aucun return
        //Affiche un quadriallage dans la console
        private void Initializelaby()
        {
            for (int hauteur = 0; hauteur < 40 + 1; hauteur++)
            {
                if (hauteur % 2 == 0)
                {
                    tab[hauteur, 0] = "+";
                    for (int largeur = 1; largeur < 40; largeur += 2)
                    {

                        tab[hauteur, largeur] = "---";
                        tab[hauteur, largeur + 1] = "+";
                    }
                }
                if (hauteur % 2 != 0)
                {
                    tab[hauteur, 0] = "|";
                    for (int largeur = 1; largeur < 40; largeur += 2)
                    {
                        tab[hauteur, largeur] = "esp";
                        tab[hauteur, largeur + 1] = "|";
                    }
                }
            }
        }
        private void Initializelaby1()
        {
            for (int hauteur = 0; hauteur < 43 + 1; hauteur++)
            {
                if (hauteur % 2 == 0)
                {
                    tab[hauteur, 0] = "+";
                    for (int largeur = 1; largeur < 43; largeur += 2)
                    {

                        tab[hauteur, largeur] = "---";
                        tab[hauteur, largeur + 1] = "+";
                    }
                }
                if (hauteur % 2 != 0)
                {
                    tab[hauteur, 0] = "|";
                    for (int largeur = 1; largeur < 43; largeur += 2)
                    {
                        tab[hauteur, largeur] = "esp";
                        tab[hauteur, largeur + 1] = "|";
                    }
                }
            }
        }
        private void parcourProfondeur(int ligne, int colonne)
        {
            int flag = 0;
            //0 correspond à aucune case visité 
            //1 correspond à 1 nouvelle case visité

            tabVisiteurs[0, 0] = ligne; // initialisation de la premiere case dans le tableau visiteur
            tabVisiteurs[0, 1] = colonne;
            comptVisiteur++; //compteur des visiteur
            pile[0, 0] = ligne; // Initialisation de la première case dans la pile
            pile[0, 1] = colonne;
            comptPile++;

            do
            {
                int[] directions = { 0, 1, 2, 3 };// Déclaration d'un tableau contenant les directions possibles
                melangeTableau(directions); // Mélanger l'ordre des directions

                //boucle qui traite les éléments du tableau directions 
                //"direction" est une variable qui prend une valeur de "directions" à chaque incrémentation
                foreach (int direction in directions)
                {
                    flag = 0;
                    int newLigne = 0;
                    int newColonne = 0;
                    int CoordonnéeVoisinLigne = 0;
                    int CoordonnéeVoisinColonne = 0;

                    //selon la valeur de la variable direction (0, 1, 2, 3) alors le parcour prend une direction différente
                    switch (direction)
                    {
                        case 0: // gauche
                            newLigne = ligne;
                            newColonne = colonne - 1;
                            CoordonnéeVoisinLigne = ligne;
                            CoordonnéeVoisinColonne = colonne - 2;
                            break;
                        case 1: // droite
                            newLigne = ligne;
                            newColonne = colonne + 1;
                            CoordonnéeVoisinLigne = ligne;
                            CoordonnéeVoisinColonne = colonne + 2;
                            break;
                        case 2: // bas
                            newLigne = ligne + 1;
                            newColonne = colonne;
                            CoordonnéeVoisinLigne = ligne + 2;
                            CoordonnéeVoisinColonne = colonne;
                            break;
                        case 3: // haut
                            newLigne = ligne - 1;
                            newColonne = colonne;
                            CoordonnéeVoisinLigne = ligne - 2;
                            CoordonnéeVoisinColonne = colonne;
                            break;
                    }
                    //on vérifie qu'on ne sort pas du labyrinthe
                    if (Bordure(newLigne, newColonne))
                    {
                        bool visiteurNonPresent = true;

                        //on vérifie que l'ont ne passe pas dans un case déjà visité
                        for (int parcourTabVisiteurs = 0; parcourTabVisiteurs < 5000; parcourTabVisiteurs++)
                        {
                            if (tabVisiteurs[parcourTabVisiteurs, 0] == CoordonnéeVoisinLigne && tabVisiteurs[parcourTabVisiteurs, 1] == CoordonnéeVoisinColonne)
                            {
                                visiteurNonPresent = false;
                                break;
                            }
                        }

                        //si la case que l'ont souhaite visiter est sur la même ligne (le mur est vertical)
                        if (visiteurNonPresent && tab[newLigne, newColonne] == "|")
                        {
                            //on retire le mur pour le remplacer par une porte
                            tab[newLigne, newColonne] = " ";

                            //on rajoute dans la pile la case dans laquel on vas 
                            pile[comptPile, 0] = CoordonnéeVoisinLigne;
                            pile[comptPile, 1] = CoordonnéeVoisinColonne;

                            //on rajoute la case dans la table des voisins aussi
                            tabVisiteurs[comptVisiteur, 0] = CoordonnéeVoisinLigne;
                            tabVisiteurs[comptVisiteur, 1] = CoordonnéeVoisinColonne;

                            //on incrémente le curseur de la pile et celui de la table des visiteurs
                            comptPile++;
                            comptVisiteur++;

                            //prochaine case devient la nouvelle case actuelle 
                            ligne = CoordonnéeVoisinLigne;
                            colonne = CoordonnéeVoisinColonne;

                            //on indique que l'on a trouver et changer de case
                            flag = 1;
                            //on incrémente le compteur de portes
                            compteurPorte++;


                        }
                        //si la case que l'ont souhaite visiter est sur la même ligne (le mur est horizontal)
                        if (visiteurNonPresent && tab[newLigne, newColonne] == "---")
                        {
                            //on retire le mur pour le remplacer par une porte
                            tab[newLigne, newColonne] = "   ";

                            //on rajoute la case suivante dans la pile et la table des voisins 
                            pile[comptPile, 0] = CoordonnéeVoisinLigne;
                            pile[comptPile, 1] = CoordonnéeVoisinColonne;
                            tabVisiteurs[comptVisiteur, 0] = CoordonnéeVoisinLigne;
                            tabVisiteurs[comptVisiteur, 1] = CoordonnéeVoisinColonne;

                            //on incrémente les curseurs de la pile et de la table des visiteurs 
                            comptPile++;
                            comptVisiteur++;

                            //prochaine case devient la nouvelle case actuelle 
                            ligne = CoordonnéeVoisinLigne;
                            colonne = CoordonnéeVoisinColonne;

                            //on indique que l'on a trouver et changer de case
                            flag = 1;

                            //on incrémente le compteur de portes
                            compteurPorte++;
                        }

                    }
                    if (flag == 1)
                    {
                        break; // Sortir de la boucle foreach si flag = 1 ce qui veut dire qu'une nouvelle case a été visitée
                    }

                }
                if (flag == 0) // Si aucune case n'a été visitée, nous remontons dans la pile pour chercher les coordonnées de la case précédente.
                {
                    ligne = pile[comptPile - 2, 0];// on reprend les coordonnées de la case précédente
                    colonne = pile[comptPile - 2, 1];
                    pile[comptPile - 2, 0] = 0;// on suprimme les coordonnées de la case précédente
                    pile[comptPile - 2, 1] = 0;
                    comptPile--; //Décrémentation du compteur, car nous avons enlevé une case à notre pile
                }
            } while (comptVisiteur < 400); // Le programme fonctionne tant que toutes les cases n'ont pas été visitées.


        }
        //le sous programme creationPorteAleatoire permet de rajouter des portes apres la génération en profondeur
        //Aucun paramètre
        //Aucun return
        //modification du quadriallage pour rajouter plus de porte dans le labyrinthe
        private void creationPorteAleatoire()
        {
            for (int parcourHauteur = 1; parcourHauteur < Hauteur - 2; parcourHauteur += 2)
            {
                int flag = 0;
                do
                {
                    //tableau qui possède toutes les valeur ou il y a possiblement un mur
                    int[] listeMurs = { 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38 };

                    //on choisie un des murs aléatoirement 
                    melangeTableau(listeMurs);

                    foreach (int mur in listeMurs)
                    {
                        //on retire le premier élément de la liste aléatoire et on sort de la boucle
                        if (tab[parcourHauteur, mur] == "|")
                        {
                            tab[parcourHauteur, mur] = " ";
                            flag++;
                            compteurPorte++;
                        }
                        if (flag == 2)
                        {
                            break; // Sortir de la boucle foreach si le flag est égale à 1
                        }

                    }
                    foreach (int direction in listeMurs)
                    {
                        //on retire le premier élément de la liste aléatoire et on sort de la boucle
                        if (tab[parcourHauteur + 1, direction + 1] == "---")
                        {
                            tab[parcourHauteur + 1, direction + 1] = "   ";
                            flag++;
                            compteurPorte++;
                        }
                        if (flag == 4)
                        {
                            break; // Sortir de la boucle foreach si le flag est égale à 2
                        }

                    }
                    // Sortir de la boucle while si le flag est égale à 2 (on a retirer 2 murs par ligne)
                } while (flag != 4);


            }
        }
        private void creationflammeAleatoire()
        {
            for (int parcourHauteur = 1; parcourHauteur < Hauteur - 2; parcourHauteur += 2)
            {
                int flag = 0;
                do
                {
                    //tableau qui possède toutes les valeur ou il y a possiblement des espaces
                    int[] listeflamme = { 1, 3, 5, 7, 9, 11, 13, 15, 17, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39 };

                    //on choisie un des murs aléatoirement 
                    melangeTableau(listeflamme);

                    foreach (int flamme in listeflamme)
                    {
                        //on retire le premier élément de la liste aléatoire et on sort de la boucle
                        if (tab[parcourHauteur, flamme] == "esp")
                        {
                            tab[parcourHauteur, flamme] = "fla";
                            flag++;
                            compFlamme++;
                        }
                        if (flag == 4)
                        {
                            break; // Sortir de la boucle foreach si le flag est égale à 1
                        }

                    }
                } while (flag != 4);


            }
        }

        private void creationdashAleatoire()
        {


            int[] tableau = { 1, 3, 5, 7, 9, 11, 13, 15, 17, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39 };
            Random random = new Random();
            int indiceAleatoire = random.Next(tableau.Length);
            int nombreAleatoire = tableau[indiceAleatoire];
            int flag = 0;
            do
            {
                //tableau qui possède toutes les valeur ou il y a possiblement des espaces
                int[] listeMurs = { 1, 3, 5, 7, 9, 11, 13, 15, 17, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39 };

                //on choisie un des murs aléatoirement 
                melangeTableau(listeMurs);

                foreach (int flamme in listeMurs)
                {
                    //on retire le premier élément de la liste aléatoire et on sort de la boucle
                    if (tab[nombreAleatoire, flamme] == "esp")
                    {
                        tab[nombreAleatoire, flamme] = "dash";
                        flag++;
                        compArtefact++;
                    }
                    if (flag == 1)
                    {
                        break; // Sortir de la boucle foreach si le flag est égale à 1
                    }

                }
            } while (flag != 1);
        }
        private void creationlyreAleatoire()
        {

            for (int i = 0; i < 4; i++)
            {
                int[] tableau = { 1, 3, 5, 7, 9, 11, 13, 15, 17, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39 };
                Random random = new Random();
                int indiceAleatoire = random.Next(tableau.Length);
                int nombreAleatoire = tableau[indiceAleatoire];
                int flag = 0;
                do
                {
                    //tableau qui possède toutes les valeur ou il y a possiblement des espaces
                    int[] listeMurs = { 1, 3, 5, 7, 9, 11, 13, 15, 17, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39 };

                    //on choisie un des murs aléatoirement 
                    melangeTableau(listeMurs);

                    foreach (int flamme in listeMurs)
                    {
                        //on retire le premier élément de la liste aléatoire et on sort de la boucle
                        if (tab[nombreAleatoire, flamme] == "esp")
                        {
                            tab[nombreAleatoire, flamme] = "lyre";
                            flag++;
                            compArtefact++;
                        }
                        if (flag == 1)
                        {
                            break; // Sortir de la boucle foreach si le flag est égale à 1
                        }

                    }
                } while (flag != 1);
            }
        }
        private void creationmultAleatoire()
        {

            for (int i = 0; i < 3; i++)
            {
                int[] tableau = { 1, 3, 5, 7, 9, 11, 13, 15, 17, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39 };
                Random random = new Random();
                int indiceAleatoire = random.Next(tableau.Length);
                int nombreAleatoire = tableau[indiceAleatoire];
                int flag = 0;
                do
                {
                    //tableau qui possède toutes les valeur ou il y a possiblement des espaces
                    int[] listeExp = { 1, 3, 5, 7, 9, 11, 13, 15, 17, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39 };

                    //on choisie un des murs aléatoirement 
                    melangeTableau(listeExp);

                    foreach (int flamme in listeExp)
                    {
                        //on retire le premier élément de la liste aléatoire et on sort de la boucle
                        if (tab[nombreAleatoire, flamme] == "esp")
                        {
                            tab[nombreAleatoire, flamme] = "exp";
                            flag++;
                            compArtefact++;
                        }
                        if (flag == 1)
                        {
                            break; // Sortir de la boucle foreach si le flag est égale à 1
                        }

                    }
                } while (flag != 1);
            }
        }
        private void creationbouclierAleatoire()
        {

            for (int i = 0; i < 2; i++)
            {
                int[] tableau = { 1, 3, 5, 7, 9, 11, 13, 15, 17, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39 };
                Random random = new Random();
                int indiceAleatoire = random.Next(tableau.Length);
                int nombreAleatoire = tableau[indiceAleatoire];
                int flag = 0;
                do
                {
                    //tableau qui possède toutes les valeur ou il y a possiblement des espaces
                    int[] listeBouclier = { 1, 3, 5, 7, 9, 11, 13, 15, 17, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39 };

                    //on choisie un des murs aléatoirement 
                    melangeTableau(listeBouclier);

                    foreach (int flamme in listeBouclier)
                    {
                        //on retire le premier élément de la liste aléatoire et on sort de la boucle
                        if (tab[nombreAleatoire, flamme] == "esp")
                        {
                            tab[nombreAleatoire, flamme] = "bou";
                            flag++;
                            compArtefact++;
                        }
                        if (flag == 1)
                        {
                            break; // Sortir de la boucle foreach si le flag est égale à 1
                        }

                    }
                } while (flag != 1);
            }
        }
        private void creationcoeurAleatoire()
        {

            for (int i = 0; i < 1; i++)
            {
                int[] tableau = { 1, 3, 5, 7, 9, 11, 13, 15, 17, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39 };
                Random random = new Random();
                int indiceAleatoire = random.Next(tableau.Length);
                int nombreAleatoire = tableau[indiceAleatoire];
                int flag = 0;
                do
                {
                    //tableau qui possède toutes les valeur ou il y a possiblement des espaces
                    int[] listecoeur = { 1, 3, 5, 7, 9, 11, 13, 15, 17, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39 };

                    //on choisie un des murs aléatoirement 
                    melangeTableau(listecoeur);

                    foreach (int flamme in listecoeur)
                    {
                        //on retire le premier élément de la liste aléatoire et on sort de la boucle
                        if (tab[nombreAleatoire, flamme] == "esp")
                        {
                            tab[nombreAleatoire, flamme] = "coe";
                            flag++;
                            compArtefact++;
                        }
                        if (flag == 1)
                        {
                            break; // Sortir de la boucle foreach si le flag est égale à 1
                        }

                    }
                } while (flag != 1);
            }
        }
        private void creationvitesseAleatoire()
        {

            for (int i = 0; i < 3; i++)
            {
                int[] tableau = { 1, 3, 5, 7, 9, 11, 13, 15, 17, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39 };
                Random random = new Random();
                int indiceAleatoire = random.Next(tableau.Length);
                int nombreAleatoire = tableau[indiceAleatoire];
                int flag = 0;
                do
                {
                    //tableau qui possède toutes les valeur ou il y a possiblement des espaces
                    int[] listevitesse = { 1, 3, 5, 7, 9, 11, 13, 15, 17, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39 };

                    //on choisie un des murs aléatoirement 
                    melangeTableau(listevitesse);

                    foreach (int flamme in listevitesse)
                    {
                        //on retire le premier élément de la liste aléatoire et on sort de la boucle
                        if (tab[nombreAleatoire, flamme] == "esp")
                        {
                            tab[nombreAleatoire, flamme] = "vit";
                            flag++;
                            compArtefact++;
                        }
                        if (flag == 1)
                        {
                            break; // Sortir de la boucle foreach si le flag est égale à 1
                        }

                    }
                } while (flag != 1);
            }
        }
        private void creationbalanceAleatoire()
        {

            for (int i = 0; i < 1; i++)
            {
                int[] tableau = { 1, 3, 5, 7, 9, 11, 13, 15, 17, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39 };
                Random random = new Random();
                int indiceAleatoire = random.Next(tableau.Length);
                int nombreAleatoire = tableau[indiceAleatoire];
                int flag = 0;
                do
                {
                    //tableau qui possède toutes les valeur ou il y a possiblement des espaces
                    int[] listebalance = { 1, 3, 5, 7, 9, 11, 13, 15, 17, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39 };

                    //on choisie un des murs aléatoirement 
                    melangeTableau(listebalance);

                    foreach (int flamme in listebalance)
                    {
                        //on retire le premier élément de la liste aléatoire et on sort de la boucle
                        if (tab[nombreAleatoire, flamme] == "esp")
                        {
                            tab[nombreAleatoire, flamme] = "bal";
                            flag++;
                            compArtefact++;
                        }
                        if (flag == 1)
                        {
                            break; // Sortir de la boucle foreach si le flag est égale à 1
                        }

                    }
                } while (flag != 1);
            }
        }
        private void creationfloconAleatoire()
        {

            for (int i = 0; i < 2; i++)
            {
                int[] tableau = { 1, 3, 5, 7, 9, 11, 13, 15, 17, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39 };
                Random random = new Random();
                int indiceAleatoire = random.Next(tableau.Length);
                int nombreAleatoire = tableau[indiceAleatoire];
                int flag = 0;
                do
                {
                    //tableau qui possède toutes les valeur ou il y a possiblement des espaces
                    int[] listeflocon = { 1, 3, 5, 7, 9, 11, 13, 15, 17, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39 };

                    //on choisie un des murs aléatoirement 
                    melangeTableau(listeflocon);

                    foreach (int flamme in listeflocon)
                    {
                        //on retire le premier élément de la liste aléatoire et on sort de la boucle
                        if (tab[nombreAleatoire, flamme] == "esp")
                        {
                            tab[nombreAleatoire, flamme] = "flo";
                            flag++;
                            compArtefact++;
                        }
                        if (flag == 1)
                        {
                            break; // Sortir de la boucle foreach si le flag est égale à 1
                        }

                    }
                } while (flag != 1);
            }
        }
        //sous programme qui mélange un tableau
        //Paramètre :
        //-un tableau
        //Return :
        //-ce même tableau trié
        private void melangeTableau(int[] tabAleatoire)
        {
            for (int i = tabAleatoire.Length - 1; i > 0; i--)
            {
                int j = random.Next(i + 1);
                int temp = tabAleatoire[i];
                tabAleatoire[i] = tabAleatoire[j];
                tabAleatoire[j] = temp;
            }
        }
        //Sous programme qui vérifie que les coordonnées sont dans le quadrillage
        //Paramètre :
        //-ligne : ligne du tableau
        //-colonne : colonne du tableau
        //Return :
        //-un booléen
        private bool Bordure(int ligne, int colonne)
        {
            return ligne >= 1 && ligne < 40 && colonne >= 1 && colonne < 40;
        }
        //sous programme qui affiche l'intégralité du quadriallage
        public void affichage()
        {
            for (int i = 0; i < Hauteur; i++)
            {
                for (int j = 0; j < Largeur; j++)
                {
                    Console.Write(tab[i, j]); // Afficher chaque cellule
                }
                Console.WriteLine(); // Aller à la ligne pour la prochaine rangée
            }
        }
        public string AfficheCase(int ligne, int colonne)
        {
            return this.tab[colonne, ligne];
        }

    }
}